rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Products: Can be read by anyone
    match /products/{productId} {
      allow read: if true;
    }

    // Users:
    // Any authenticated user can create their own user document (isGuest: true for anonymous, isGuest: false for email/password)
    // Users can read their own user document
    // Users can update their own user document (but not change their isGuest status if already set)
    match /users/{userId} {
      allow create: if request.auth.uid == userId;
      allow read: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId && !(request.resource.data.isGuest is bool);
      // Deny delete for user documents
      allow delete: if false;
    }

    // Guest Counter (TEMPORARY - will need Cloud Function later for security)
    // Allows clients to read and update a single counter document for sequential guest IDs.
    match /settings/guestCounter {
      allow read, update: if true;
    }

    // User-specific Subcollections: cart, wishlist, orders
    // Only the authenticated user can read/write their own data within their subcollections.
    match /users/{userId}/{collectionName}/{docId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Catch-all: Deny all other reads and writes for any collection/document not explicitly allowed above.
    match /{document=**} {
      allow read: if false;
      allow write: if false;
    }
  }
}
